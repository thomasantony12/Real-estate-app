-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.chat
(
    id integer NOT NULL DEFAULT nextval('chat_id_seq'::regclass),
    userid integer,
    tousersid integer,
    lastmsg character varying(50) COLLATE pg_catalog."default",
    seenby character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT chat_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.msg
(
    id integer NOT NULL DEFAULT nextval('msg_id_seq'::regclass),
    chatid integer,
    message character varying(100) COLLATE pg_catalog."default",
    createdat timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT msg_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.postdetails
(
    id integer NOT NULL DEFAULT nextval('postdetails_id_seq'::regclass),
    description character varying(500) COLLATE pg_catalog."default",
    utilities character varying(50) COLLATE pg_catalog."default",
    pet character varying(50) COLLATE pg_catalog."default",
    income integer,
    size smallint,
    school smallint,
    bus smallint,
    restaurant smallint,
    postid integer,
    CONSTRAINT postdetails_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.postimages
(
    id integer NOT NULL DEFAULT nextval('postimages_id_seq'::regclass),
    image character varying(500) COLLATE pg_catalog."default",
    postid integer,
    CONSTRAINT postimages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.posts
(
    id integer NOT NULL DEFAULT nextval('posts_id_seq'::regclass),
    title character varying(100) COLLATE pg_catalog."default",
    price integer,
    address character varying(150) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default",
    bedroom smallint,
    bathroom smallint,
    latitude character varying(50) COLLATE pg_catalog."default",
    longitude character varying(50) COLLATE pg_catalog."default",
    type character varying(30) COLLATE pg_catalog."default",
    property character varying(30) COLLATE pg_catalog."default",
    createdat timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    userid integer NOT NULL,
    CONSTRAINT posts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.savedposts
(
    id integer NOT NULL DEFAULT nextval('savedposts_id_seq'::regclass),
    userid integer,
    postid integer,
    CONSTRAINT savedposts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    uname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    createdat timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    avatar character varying(200) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_uname_key UNIQUE (uname)
);

ALTER TABLE IF EXISTS public.chat
    ADD CONSTRAINT chat_tousersid_fkey FOREIGN KEY (tousersid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chat
    ADD CONSTRAINT chat_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.msg
    ADD CONSTRAINT msg_chatid_fkey FOREIGN KEY (chatid)
    REFERENCES public.chat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.postdetails
    ADD CONSTRAINT postdetails_postid_fkey FOREIGN KEY (postid)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.postimages
    ADD CONSTRAINT postimages_postid_fkey FOREIGN KEY (postid)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.posts
    ADD CONSTRAINT posts_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.savedposts
    ADD CONSTRAINT savedposts_postid_fkey FOREIGN KEY (postid)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.savedposts
    ADD CONSTRAINT savedposts_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;